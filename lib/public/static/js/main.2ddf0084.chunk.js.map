{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/auth.js","Router/PublicRoute.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/prepateEvents.js","actions/event.js","components/ui/NavBar.js","helpers/calendar-message.js","components/calendar/CalendarEvent.js","helpers/centerModal.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","Router/PrivateRoute.js","Router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","checkingFinish","login","user","logout","PublicRoute","isAuthenticated","Component","component","rest","props","to","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","autoComplete","onChange","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","NavBar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","uiOpenModal","Modal","setAppElement","now","minutes","seconds","add","nowPlusOne","clone","initEvent","notes","CalendarModal","React","dateStart","setdateStart","dateEnd","setdateEnd","titleValid","setTitleValid","formValues","setFormValues","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","onView","selectable","view","components","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ddf0084.chunk.js","sourcesContent":["export const types = {\n\n  uiOpenModal: '[ui] Open modal',\n  uiCloseModal: '[ui] Close modal',\n   \n  //Calendar\n  eventSetActive: '[event] Set active',\n  eventLogout: '[event] Event logout',\n  eventStartAddNew: '[event] Start add new',\n  eventAddNew: '[event] Add new',\n  eventClearActiveEvent: '[event] Clear active event',\n  eventUpdated: '[event] Event updated',\n  eventDeleted: '[event] Event deleted',\n  eventLoaded: '[event] Event loaded',\n\n\n  //Auth\n  authCheckingFinish: '[auth] Finish cheching login state',\n  authStartLogin: '[auth] Start login',\n  authLogin: '[auth] Login',\n  authStartRegister: '[auth] Start Register',\n  authStartTokenRenew: '[auth] Start token renew',\n  authLogout: '[auth] Logout',\n\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n  checking: true,\n  // uid: null,\n  // name:null,\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n  \n  switch (action?.type) {\n\n    case types.authLogin:\n      return {\n        ...state,\n        checking: false,\n        ...action.payload\n      }\n    \n    case types.authCheckingFinish:\n      return {\n        ...state,\n        checking: false,\n      }\n    \n    case types.authLogout: \n      return {\n        checking: false\n      }\n  \n    default:\n      return state;\n  }\n}\n","import { types } from '../types/types';\n\n// {\n//   id: 'fjalfñhalfjalfaf af',\n//   title: 'Cumpleaños del jefe',\n//   start: moment().toDate(), //New Date()\n//   end: moment().add(2, 'hours').toDate(),\n//   notes: 'comprar juego',\n//   user: {\n//     _id: '1234',\n//     name: 'Andres'\n//   }\n// }\n\nconst initialState = {\n  events: [],\n  activeEvent: null\n}\n\n\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action?.type) {\n\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload,\n      }\n\n    case (types.eventAddNew):\n      return {\n        ...state,\n        events: [action.payload, ...state.events]\n      }\n    case (types.eventClearActiveEvent):\n      return {\n        ...state,\n        activeEvent: null\n      }\n\n    case (types.eventUpdated):\n      return {\n        ...state,\n        events: state.events.map(e => (e.id === action?.payload.id) ? action.payload : e)\n      }\n\n    case (types.eventDeleted):\n      return {\n        ...state,\n        events: state.events.filter( \n          e => ( e.id !== state?.activeEvent.id )\n        ),\n        activeEvent: null,\n      }\n    \n    case (types.eventLoaded):\n      return {\n        ...state,\n        events: [...action.payload]\n      }\n\n    case (types.eventLogout):\n      return {\n        ...initialState\n      }\n\n    default:\n      return state;\n  }\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  modalOpen: false,\n}\n\nexport const uiReducer = ( state = initialState, action ) => {\n  \n  switch (action?.type) {\n    case types.uiOpenModal :\n      return {\n        ...state,\n        modalOpen: true,\n      }\n\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false,\n      }\n  \n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { authReducer } from './authReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { uiReducer } from './uiReducer';\n\n\nexport const rootReducer = combineReducers({\n  ui: uiReducer,\n  calendar: calendarReducer,\n  auth: authReducer\n})","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\n\n//Permite usar el mantener el redux_devtools_extension y el middleware de thunk\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware( thunk )\n  )\n)","\nconst baseUrl = process.env.REACT_APP_API_URL;\n\nexport const fetchSinToken = ( endpoint, data, method = 'GET') => {\n  \n  const url = `${ baseUrl }${ endpoint }`;\n  if( method === 'GET' ){\n    return fetch(url);\n  }else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type':'application/json'\n      },\n      body: JSON.stringify(data),\n    })\n  }\n}\n\n\nexport const fetchConToken = ( endpoint, data, method = 'GET') => {\n  \n  const url = `${ baseUrl }${ endpoint }`;\n  const token = localStorage.getItem('token') || '';\n\n  if( method === 'GET' ){\n    return fetch(url ,{\n      method,\n      headers: {\n        'x-token': token,\n      }\n    });\n  }else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type':'application/json',\n        'x-token': token,\n      },\n      body: JSON.stringify(data),\n    })\n  }\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\n\n\nexport const startLogin = (email, password) => {\n  return async (dispatch) => {\n    const resp = await fetchSinToken('auth', { email, password }, 'POST');\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token)\n      localStorage.setItem('token-init-date', new Date().getTime())\n\n      dispatch(login({\n        uid: body.uid,\n        name: body.name,\n      }))\n    } else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n\n  }\n}\n\nexport const startRegister = (email, password, name) => {\n  return async (dispatch) => {\n\n    const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST');\n    const body = await resp.json()\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token)\n      localStorage.setItem('token-init-date', new Date().getTime())\n\n      dispatch(login({\n        uid: body.uid,\n        name: body.name,\n      }))\n    } else {\n      Swal.fire('Error', body.msg, 'error')\n    }\n  }\n}\n\nexport const startChecking = () => {\n  return async (dispatch) => {\n    const resp = await fetchConToken('auth/renew');\n    const body = await resp.json()\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token)\n      localStorage.setItem('token-init-date', new Date().getTime())\n\n      dispatch(login({\n        uid: body.uid,\n        name: body.name,\n      }))\n    } else {\n      dispatch( checkingFinish() )\n    }\n  }\n}\n\nconst checkingFinish = () => ({\n  type: types.authCheckingFinish\n})\n\nconst login = (user) => ({\n  type: types.authLogin,\n  payload: user,\n});\n\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    \n    localStorage.clear();\n    dispatch( logout ())\n\n  }\n}\n\nconst logout = () => ({ type: types.authLogout })\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport { Redirect, Route } from 'react-router-dom'\n\n\nexport default function PublicRoute({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) {\n  return (\n    <Route \n      {...rest}\n      component={(props) => (\n        (isAuthenticated) ? (<Redirect to=\"/\" />) : (<Component {...props} />) \n      )}\n    />\n  )\n}\n\nPublicRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n}","import { useState } from 'react'\n\n/***\n * Retorna el valor de una caja de texto\n *  ***/\nexport const useForm = ( initialState = {} ) => {\n  const [values, setValues] = useState(initialState)\n\n  const reset = () => {\n    setValues(initialState);\n  }\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    })\n  }\n\n\n  return [ values, handleInputChange, reset]\n}","import * as React from 'react'\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n  const dispatch = useDispatch()\n\n  const [formLoginValues, handleLoginInputChange] = useForm({\n    lEmail: '',\n    lPassword: '',\n  });\n\n  const { lEmail, lPassword } = formLoginValues;\n\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\n    rName: '',\n    rEmail: '',\n    rPassword1: '',\n    rPassword2: '',\n  });\n\n  const {\n    rName,\n    rEmail,\n    rPassword1,\n    rPassword2,\n  } = formRegisterValues;\n\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(startLogin(lEmail, lPassword));\n  }\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    if (rPassword1 !== rPassword2) {\n      return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\n    }\n    \n    dispatch(startRegister(rEmail, rPassword1, rName));\n  }\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Ingreso</h3>\n          <form\n            onSubmit={handleLogin}\n          >\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                autoComplete=\"off\"\n                name=\"lEmail\"\n                value={lEmail}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                autoComplete=\"off\"\n                name=\"lPassword\"\n                value={lPassword}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"submit\"\n                className=\"btnSubmit\"\n                value=\"Login\"\n              />\n            </div>\n          </form>\n        </div>\n\n\n        <div className=\"col-md-6 login-form-2\">\n          <h3>Registro</h3>\n          <form\n            onSubmit={handleRegister}\n          >\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Nombre\"\n                autoComplete=\"off\"\n                name=\"rName\"\n                value={rName}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                autoComplete=\"off\"\n                name=\"rEmail\"\n                value={rEmail}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                autoComplete=\"off\"\n                name=\"rPassword1\"\n                value={rPassword1}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Repita la contraseña\"\n                autoComplete=\"off\"\n                name=\"rPassword2\"\n                value={rPassword2}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"submit\"\n                className=\"btnSubmit\"\n                value=\"Crear cuenta\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import moment from 'moment';\n\nexport const prepareEvents = ( events = [] ) => {\n  \n  return events.map(e => ({\n    ...e,\n    end: moment( e.end ).toDate(),\n    start: moment( e.start ).toDate(),\n  }))\n}\n","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepateEvents\";\nimport { types } from \"../types/types\";\n\n\nexport const eventStartAddNew = (event) => {\n  return async (dispatch, getState) => {\n\n    const { uid, name } = getState().auth\n\n    try {\n      const resp = await fetchConToken('events', event, 'POST')\n      const body = await resp.json()\n      if (body.ok) {\n\n        event.id = body.evento.id;\n        event.user = {\n          _id: uid,\n          name: name,\n        }\n\n        dispatch(eventAddNew(event))\n      }\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\n\n\nconst eventAddNew = (event) => ({\n  type: types.eventAddNew,\n  payload: event\n})\n\nexport const eventSetActive = (event) => ({\n  type: types.eventSetActive,\n  payload: event\n})\n\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent })\n\nexport const eventStartUpdate = (event) => {\n  return async (dispatch) => {\n    try {\n\n      const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventUpdated(event));\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\n\n\nconst eventUpdated = (event) => ({\n  type: types.eventUpdated,\n  payload: event\n})\n\n\nexport const eventStartDelete = () => {\n  return async ( dispatch, getState ) => {\n    const { id } = getState().calendar?.activeEvent;\n    try {\n\n      const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventDeleted());\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nconst eventDeleted = () => ({ type: types.eventDeleted })\n\n\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n\n    try {\n      const resp = await fetchConToken('events');\n      const body = await resp.json();\n\n      const events = prepareEvents(body.eventos);\n\n      dispatch(eventLoaded(events))\n\n    } catch (error) {\n      console.log(error)\n    }\n\n\n  }\n}\n\nconst eventLoaded = (events) => ({\n  type: types.eventLoaded,\n  payload: events,\n})\n\nexport const eventLogout = () => ({\n  type: types.eventLogout\n})\n","import * as React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth'\nimport { eventLogout } from '../../actions/event'\nimport './uiStyles.css'\n\nexport const NavBar = () => {\n  \n  const dispatch = useDispatch()\n  const { name } = useSelector(state => state.auth);\n\n  const handleLogout = () => {\n    dispatch( startLogout() );\n    dispatch( eventLogout() );\n  }\n  \n\n  return (\n    <div className=\"navbar navbar-dark bg-dark md-4\">\n      <span className=\"navbar-brand\">\n        { name }\n      </span>\n\n      <button \n        className=\"btn btn-outline-danger\"\n        onClick={ handleLogout }\n      >\n        <i className=\"fas fa-sign-out-alt\"></i>\n        <span>Salir</span>\n      </button>\n    </div>\n  )\n}\n","export const messages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: total => `+ Ver más (${total})`\n};","import * as React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n  const { title, user } = event;\n  \n  return (\n    <div>\n      <span>{ title }</span>\n      <strong>- { user?.name }</strong>\n    </div>\n  )\n}\n","export const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};","import { types } from \"../types/types\"\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal })\n\nexport const uiCloseModal = () => ({ type: types.uiCloseModal })\n\n\n","import * as  React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-modal';\nimport moment from 'moment'\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\nimport { customStyles } from '../../helpers/centerModal';\nimport './modal.css'\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/event';\n\n\nModal.setAppElement('#root')\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst nowPlusOne = now.clone().add(1, 'hours');\n\nconst initEvent = {\n  title: '',\n  notes: '',\n  start: now.toDate(),\n  end: nowPlusOne.toDate(),\n}\n\n\nexport const CalendarModal = () => {\n\n  const dispatch = useDispatch()\n  const { modalOpen } = useSelector(state => state.ui)\n  const { activeEvent } = useSelector(state => state.calendar)\n\n\n  const [dateStart, setdateStart] = React.useState(now.toDate())\n  const [dateEnd, setdateEnd] = React.useState(nowPlusOne.toDate())\n  const [titleValid, setTitleValid] = React.useState(true)\n\n  const [formValues, setFormValues] = React.useState(initEvent)\n\n  const { notes, title, start, end } = formValues;\n\n  React.useEffect(() => {\n    if( activeEvent ){\n      setFormValues(activeEvent)\n    } else {\n      setFormValues(initEvent)\n    }\n\n  }, [activeEvent, setFormValues])\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    })\n  }\n\n\n  const closeModal = () => {\n    dispatch(uiCloseModal())\n    dispatch(eventClearActiveEvent())\n    setFormValues(initEvent)\n  }\n\n  const handleStartDateChange = (e) => {\n    setdateStart(e)\n    setFormValues({\n      ...formValues,\n      start: e,\n    })\n  }\n\n  const handleEndDateChange = (e) => {\n    setdateEnd(e)\n    setFormValues({\n      ...formValues,\n      end: e,\n    })\n  }\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    \n    const momentStart = moment(start)\n    const momentEnd = moment(end)\n    \n    if( momentStart.isSameOrAfter( momentEnd ) ){\n      Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio.', 'error')\n      return ;\n    }\n\n    if(title.trim().length < 2){\n      setTitleValid(false);\n      return ;\n    }\n\n    if( activeEvent ){\n      dispatch( eventStartUpdate(formValues) )\n    } else {\n      dispatch( eventStartAddNew(formValues) )\n\n    }\n\n    setTitleValid(true);\n    closeModal()\n  }\n  \n\n  return (\n    <Modal\n      isOpen={ modalOpen }\n      // onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n    >\n      <h1>{ (activeEvent) ? 'Editar Evento' : 'Nuevo Evento' }</h1>\n      <hr />\n      <form\n        onSubmit={ handleSubmit }\n        className=\"container\"\n      >\n\n        <div className=\"form-group\">\n          <label>Fecha y hora inicio</label>\n          <DateTimePicker\n            onChange={handleStartDateChange}\n            value={dateStart}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Fecha y hora fin</label>\n          <DateTimePicker\n            onChange={handleEndDateChange}\n            value={dateEnd}\n            minDate={dateStart}\n            className=\"form-control\"\n          />\n        </div>\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Titulo y notas</label>\n          <input\n            type=\"text\"\n            className={`form-control ${ !titleValid && 'is-invalid' }`}\n            placeholder=\"Título del evento\"\n            autoComplete=\"off\"\n            name=\"title\"\n            value={title}\n            onChange={handleInputChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Notas\"\n            rows=\"5\"\n            name=\"notes\"\n            value={notes}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n        >\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n\n      </form>\n    </Modal>\n  )\n}\n","import * as React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui'\n\nexport const AddNewFab = () => {\n\n  const dispatch = useDispatch()\n\n  const handleClickNew = () => {\n    dispatch( uiOpenModal() )\n  }\n  \n\n  return (\n    <button\n      className=\"btn btn-primary fab\"\n      onClick={ handleClickNew }\n    >\n      <i className=\"fas fa-plus\" ></i>\n    </button>\n  )\n}\n","import * as React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/event'\n\nexport const DeleteEventFab = () => {\n  \n  const dispatch = useDispatch()\n\n  const handleDelete = () => {\n    dispatch( eventStartDelete() )\n  }\n  \n  \n  return (\n    <button\n      className=\"btn btn-danger fab-danger\"\n      onClick={ handleDelete }\n    >\n      <i className=\"fas fa-trash\" ></i>\n      <span>Borrar evento</span>\n    </button>\n  )\n}\n","import * as React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\n\nimport { NavBar } from '../ui/NavBar'\nimport { messages } from '../../helpers/calendar-message'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport 'moment/locale/es'\nimport { CalendarEvent } from './CalendarEvent'\nimport { CalendarModal } from './CalendarModal'\nimport { uiOpenModal } from '../../actions/ui'\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/event'\nimport { AddNewFab } from '../ui/AddNewFab'\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\n\nmoment.locale('es')\n\nconst localizer = momentLocalizer(moment)\n\nexport const CalendarScreen = () => {\n\n  const dispatch = useDispatch()\n  const { events, activeEvent } = useSelector(state => state.calendar)   \n\n  const [lastView, setLastView] = React.useState(\n    localStorage.getItem('lastView') || 'month'\n  )\n\n  React.useEffect(() => {\n    dispatch( eventStartLoading() )\n    \n  }, [dispatch])\n\n  const onDoubleClick = (e) => {\n    dispatch(uiOpenModal())\n  }\n\n  const onSelectEvent = (e) => {\n    dispatch(eventSetActive(e))\n  }\n\n  const onViewChange = (e) => {\n    setLastView(e);\n    localStorage.setItem('lastView', e);\n  }\n\n\n  const onSelectSlot = (e) => {\n    //Este metodo recibe la celda donde el usuario hizo click\n    //console.log(e)\n    dispatch( eventClearActiveEvent() )\n  }\n  \n\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: '#367CF7',\n      borderRadius: '0px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white',\n    }\n\n    return {\n      style\n    }\n  }\n\n  return (\n    <div className=\"calendar-screen\">\n      <NavBar />\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={messages}\n        eventPropGetter={eventStyleGetter}\n        onDoubleClickEvent={onDoubleClick}\n        onSelectEvent={onSelectEvent}\n        onSelectSlot= { onSelectSlot }\n        onView={onViewChange}\n        selectable={ true }\n        view={ lastView }\n        components={{\n          event: CalendarEvent\n        }}\n      />\n\n      <AddNewFab />\n      { ( activeEvent ) && <DeleteEventFab /> }\n      <CalendarModal />\n      \n    </div>\n  )\n}\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport { Redirect, Route } from 'react-router-dom'\n\n\nexport default function PrivateRoute({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) {\n  return (\n    <Route \n      {...rest}\n      component={(props) => (\n        (isAuthenticated) ? (<Component {...props} />) : (<Redirect to=\"/login\" />)\n      )}\n    />\n  )\n}\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n}","import * as React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from 'react-router-dom'\nimport { startChecking } from '../actions/auth'\nimport PublicRoute from './PublicRoute'\nimport { LoginScreen } from '../components/auth/LoginScreen'\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\nimport PrivateRoute from './PrivateRoute'\n\n\nexport const AppRouter = () => {\n\n  const { checking, uid } = useSelector(state => state.auth)\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch( startChecking() );\n  }, [dispatch])\n\n  if( checking ) {\n    return (<h5>Loading...</h5>);\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PrivateRoute\n            exact\n            path=\"/\"\n            component={CalendarScreen}\n            isAuthenticated={ !!uid }\n          />\n          <PublicRoute\n            exact\n            path=\"/login\"\n            component={LoginScreen}\n            isAuthenticated={ !!uid }\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n","import * as React from 'react'\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\nimport { AppRouter } from './Router/AppRouter'\n\nexport const CalendarApp = () => {\n  return (\n    <Provider store={ store }>\n      <AppRouter />\n    </Provider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CalendarApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}